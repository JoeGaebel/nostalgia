#= require applications/edit/spinner_view

class AddSphereView
  constructor: (options = {}) ->
    @app = options.app
    $(document).ready(@onDocumentReady)

  onDocumentReady: =>
    @createUIHash()
    @bindHandlers()

  createUIHash: ->
    @ui =
      $addSphereLink: $('.add-sphere-link')
      $submit: $('#upload-submit')
      $cancel: $('#upload-cancel')
      $caption: $('.sphere-caption')
      $file: $('.sphere-file')

      $fileForm: $('.file-form')
      $captionForm: $('.caption-form')

  bindHandlers: ->
    @ui.$addSphereLink.click(@onAddSphereLinkClick)
    @ui.$cancel.click(@resetPageState)
    @ui.$submit.click(@onSubmitClick)

  resetPageState: =>
    @ui.$addSphereLink.click(@onAddSphereLinkClick)
    @ui.$addSphereLink.removeClass('expanded')
    event.stopPropagation()

  newSphere: ->
    formData = new FormData()
    formData.append('sphere[panorama]', @ui.$file[0].files[0]);
    formData.append('sphere[caption]', @ui.$caption.val());
    formData.append('memory_id', window.memory.id);

    @appendSpinner()
    @ui.$addSphereLink.hide()

    $.ajax
      url: '/spheres',
      data: formData,
      cache: false,
      contentType: false,
      processData: false,
      type: 'POST'
      success: @onNewSphereSuccess
      error: @onNewSphereError

  pollForCompletion: (guid) ->
    $.ajax
      url: "/spheres/#{guid}",
      data: { id: guid },
      cache: false,
      contentType: false,
      processData: false,
      type: 'GET'
      success: @onCreateSphereSuccess
      error: @onPollError

  appendSpinner: ->
    $addSphereLink = $('.add-sphere-link')

    view = new SpinnerView
    html = view.render()
    $(html).insertBefore($addSphereLink)

  removeSpinner: ->
    $('.spinner').remove()

  resetViewState: ->
    @removeSpinner()
    @ui.$addSphereLink.removeClass('expanded')
    @ui.$addSphereLink.show()
    @ui.$addSphereLink.click(@onAddSphereLinkClick)

  onAddSphereLinkClick: (event) =>
    @ui.$addSphereLink.addClass('expanded')
    @ui.$addSphereLink.off('click')
    @ui.$caption.val("")
    @ui.$file.val("")

  onSubmitClick: =>
    if !@ui.$file[0].files[0]
      @ui.$fileForm.addClass('has-error')

    if !@ui.$caption.val()
      @ui.$captionForm.addClass('has-error')

    if @ui.$file[0].files[0] && @ui.$caption.val()
      @ui.$fileForm.removeClass('has-error')
      @ui.$captionForm.removeClass('has-error')
      @newSphere()

  onNewSphereSuccess: (response) =>
    @intervalID = setInterval((=> @pollForCompletion(response.guid)), 5000)
    SpinnerView::showProgress();

  onCreateSphereSuccess: (response) =>
    return if response.guid

    clearInterval(@intervalID)
    SpinnerView::hideProgress();
    window.memory.spheres.push(response)
    @resetViewState()
    @app.handleNewSphere()

  onNewSphereError: =>
    @app.onAjaxError(arguments...)
    @resetViewState()

  onPollError: =>
    clearInterval(@intervalID)
    @app.onAjaxError(arguments...)
    @resetViewState()


window.AddSphereView = AddSphereView
