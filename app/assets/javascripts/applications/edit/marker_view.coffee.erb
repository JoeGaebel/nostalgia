#= require applications/edit/base_view
#= require applications/edit/spinner_view

class MarkerView extends BaseView
  viewClass: '.marker-view'

  constructor: (options = {}) ->
    @app = options.app
    $(document).ready(@onDocumentReady)
    @deleteMarker = _.debounce(@_deleteMarker, 250, true)

  onDocumentReady: =>
    @createUIHash()
    @bindHandlers()
    @createTipsies()
    @createEditor()

    @hide() unless window.currentSphere?

  createUIHash: ->
    @ui =
      $addMarker: $('#add-marker')
      $resetMarker: $('#reset-marker')
      $saveMarker: $('#save-marker')
      $deleteMarker: $('#delete-marker')

      $markerCaption: $('#marker_caption')
      $markerContent: $('#marker_content')

      $markerFile: $('.marker-file')

      $tipsy: $('#marker-tipsy')
      $deleteExplanation: $('.delete-marker-explanation')

      $markerContainer: $('.marker-container')

  bindHandlers: ->
    @ui.$addMarker.click(@onAddMarkerClick)
    @ui.$resetMarker.click(@app.resetPageState)
    @ui.$saveMarker.click(@onSaveMarkerClick)
    @ui.$deleteMarker.click(@onDeleteMarkerClick)

    @ui.$markerCaption.keyup _.debounce(@onMarkerCaptionChange)
    @ui.$markerContent.keyup _.debounce(@onMarkerContentChange)

  bindPSV: ->
    PSV.on 'click', @onPSVClick
    PSV.on 'select-marker', @onSelectMarker

  createTipsies: ->
    @ui.$tipsy.tipsy
      gravity: 'w'
      opacity: 1
      html: true
      title: ->
        """
          <p>
            Markers allow you to embed content into the Sphere
          </p>
          <p>
            To add a marker, click the <b>Add</b> button then click a point.
            Then, fill in the caption and the content
          </p>
        """

  createEditor: ->
    @ui.$markerContent.wysihtml5
      toolbar:
        'fa': true
        'lists': false
        'image': false
      events:
        'save:dialog': @onMarkerContentChange

    @ui.$markerContentToolbar = $('.wysihtml5-toolbar')
    @ui.$markerContentToolbar.click => _.defer(@onMarkerContentChange)
    @appendUploadButton()


  appendUploadButton: ->
    imageButton = "<li>
      <a id='add-photo' class='btn btn-default' tabindex='-1' href='javascript:;' unselectable='on'>
        <span class='fa fa-image'></span>
      </a>
    </li>"

    $('.wysihtml5-toolbar').append(imageButton)
    $('#add-photo').click(@onAddPhotoClick)
    @ui.$markerFile.change(@onMarkerFileChange)


  resetViewState: =>
    @isCreatingMarker = false
    @isDeletingMarker = false

    @ui.$addMarker.prop('disabled', false)
    @ui.$saveMarker.prop('disabled', true)
    @ui.$resetMarker.prop('disabled', true)
    @ui.$deleteMarker.prop('disabled', false)

    @ui.$markerCaption.hide()
    @ui.$markerContent.hide()
    @ui.$markerContentToolbar.hide()

    @ui.$deleteExplanation.hide()

    @removeSpinner()

    try
      PSV.getMarker('new-marker')
    catch
      return

    PSV.removeMarker('new-marker')

  freeze: ->
    @ui.$addMarker.prop('disabled', true)
    @ui.$saveMarker.prop('disabled', true)
    @ui.$resetMarker.prop('disabled', true)
    @ui.$deleteMarker.prop('disabled', true)

    @ui.$markerCaption.hide()
    @ui.$markerContent.hide()
    @ui.$markerContentToolbar.hide()

    @ui.$deleteExplanation.hide()

    @isCreatingMarker = false
    @isDeletingMarker = false

  getMarkerParams: (marker) ->
    formData = new FormData()

    formData.append('id', window.currentSphere.id)
    formData.append('marker[x]', marker.x)
    formData.append('marker[y]', marker.y)
    formData.append('marker[caption]', marker.tooltip?.content || '')
    formData.append('marker[content]', @formatEditorContent())
    formData.append('marker[photo]', @ui.$markerFile[0]?.files[0])

    formData

  _deleteMarker: (marker) =>
    markerId = marker.id.split('-')[1]
    @markerToDelete = marker

    $.ajax
      url: "/markers/#{markerId}?&sphere_id=#{currentSphere.id}"
      type: 'DELETE'
      contentType: 'application/json'
      success: @onDeleteMarkerSuccess
      error: @app.onAjaxError

  cleanMarkerCache: (marker) ->
    cachedMarker = _.findWhere(currentSphere.markers, { id: marker.id })
    indexOfCachedMarker = currentSphere.markers.indexOf(cachedMarker)
    if indexOfCachedMarker isnt -1
      currentSphere.markers.splice(indexOfCachedMarker, 1)

  getEditorContent: =>
    @ui.$markerContent.html()

  formatEditorContent: =>
    imageRegex = /<img([\w\W]+?)>/
    raw = @getEditorContent()

    if raw.match(imageRegex)
      raw.replace(imageRegex, '<!--IMGHERE-->')
    else
      @ui.$markerFile.val(null)
      raw

  setPreviewSource: ->
    input = @ui.$markerFile[0]
    if input && input.files && input.files[0]
      reader = new FileReader()

      reader.onload = (e) =>
        $('#marker_content .remove-me').attr('src', e.target.result)
        @onMarkerContentChange()

      reader.readAsDataURL(input.files[0])

  appendSpinner: ->
    spinner = new SpinnerView('marker', 'marker-spinner')

    @ui.$markerContainer.hide()
    $(@viewClass).append(spinner.render())


  removeSpinner: ->
    @ui.$markerContainer.show()
    $('.marker-spinner').remove()

# Event Handlers


  onSelectMarker: (marker, event) =>
    if marker.isNormal() && @isDeletingMarker
      marker.content = ''
      @deleteMarker(marker)

  onPSVClick: (e) =>
    if @isCreatingMarker
      try
        marker = PSV.getMarker('new-marker')
      catch
        caption = @ui.$markerCaption.val()

        PSV.addMarker
          id: 'new-marker'
          x: e.texture_x
          y: e.texture_y - @verticalOffset
          image: @app.pinUrl
          width: @app.defaultMarkerDimension
          height: @app.defaultMarkerDimension
          sphere_id: currentSphere.id
          content: @getEditorContent()
          tooltip: if caption then { content: caption, position: 'right bottom' } else undefined

        @ui.$saveMarker.prop('disabled', false)
        @ui.$markerCaption.show()
        @ui.$markerContent.show()
        @ui.$markerContentToolbar.show()

        @ui.$markerCaption.focus()

        return

      PSV.updateMarker
        id: 'new-marker'
        x: e.texture_x
        y: e.texture_y - @verticalOffset

  onAddMarkerClick: =>
    @app.freezeOtherViews(@)
    @app.setCursorToPencil()

    @ui.$addMarker.prop('disabled', true)
    @ui.$resetMarker.prop('disabled', false)
    @ui.$deleteMarker.prop('disabled', true)

    @ui.$markerFile.val(null)
    @ui.$markerContent.text('')
    @ui.$markerCaption.val('')

    @isCreatingMarker = true

  onSaveMarkerClick: =>
    marker = PSV.getMarker('new-marker')
    @app.resetCursor()

    @appendSpinner()

    $.ajax
      url: '/markers'
      data: @getMarkerParams(marker)
      cache: false
      contentType: false
      processData: false
      type: 'POST'
      success: @onSaveMarkerSuccess
      error: @onSaveMarkerError

  onDeleteMarkerClick: =>
    @app.freezeOtherViews(@)
    @ui.$deleteExplanation.show()

    @ui.$addMarker.prop('disabled', true)
    @ui.$resetMarker.prop('disabled', false)
    @ui.$deleteMarker.prop('disabled', true)

    @isDeletingMarker = true

  onMarkerCaptionChange: =>
    caption = @ui.$markerCaption.val()

    if caption
      PSV.updateMarker
        id: 'new-marker'
        tooltip:
          content: @ui.$markerCaption.val()
          position: 'right bottom'
    else
      PSV.updateMarker
        id: 'new-marker'
        tooltip: null

  onMarkerContentChange: =>
    content = @getEditorContent()

    if content
      PSV.updateMarker
        id: 'new-marker'
        content: content
    else
      PSV.updateMarker
        id: 'new-marker'
        content: null

  onAddPhotoClick: =>
    @ui.$markerFile.click()

  onMarkerFileChange: =>
    previewImage = "<img class='remove-me'>"
    $('#marker_content .remove-me').remove()
    $('#marker_content').append(previewImage)
    @setPreviewSource()
    $('#marker_content').focus()

# Promises

  onSaveMarkerSuccess: (savedRecord) =>
    marker = PSV.getMarker('new-marker')
    PSV.removeMarker('new-marker', false)

    savedRecord.content = marker.content

    PSV.addMarker(savedRecord)
    currentSphere.markers.push savedRecord

    @app.resetPageState()

  onSaveMarkerError: =>
    @resetViewState()
    @app.onAjaxError(arguments...)

  onDeleteMarkerSuccess: =>
    PSV.removeMarker(@markerToDelete)
    @cleanMarkerCache(@markerToDelete)

    @markerToDelete = null
    @app.resetPageState()

# Constants

  verticalOffset: 40;


window.MarkerView = MarkerView
